AWSTemplateFormatVersion: "2010-09-09"
Description: file manager stack ec2
Parameters:
  InstanceType:
    Type: String
Resources:
  InstancesSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow public trafic
      GroupName: instances-sg
      VpcId: !ImportValue mainvpc
      SecurityGroupIngress:
        - IpProtocol: TCP
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: TCP
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 60000

  LoadBalancerSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow public trafic
      GroupName: load-balancer-sg
      VpcId: !ImportValue mainvpc
      SecurityGroupIngress:
        - IpProtocol: TCP
          CidrIp: 0.0.0.0/0
          FromPort: 8080
          ToPort: 8080
      SecurityGroupEgress:
        - IpProtocol: TCP
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 60000

  LaunchTempalteSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow public trafic
      GroupName: load-balancer-sg
      VpcId: !ImportValue mainvpc
      SecurityGroupIngress:
        - IpProtocol: TCP
          CidrIp: 0.0.0.0/0
          FromPort: 8080
          ToPort: 8080
      SecurityGroupEgress:
        - IpProtocol: TCP
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 60000

  KeyPair:
    Type: "AWS::EC2::KeyPair"
    Properties:
      KeyName: FileManagerAutoSacalingGroupKeyPair

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: file-manager-lb
      Type: application
      Subnets:
        - !ImportValue subnetA
        - !ImportValue subnetB
      SecurityGroups:
        - !Ref LoadBalancerSg

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: http

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-08a52ddb321b32a8c
        InstanceType: !Ref "InstanceType"
        KeyName: FileManagerAutoSacalingGroupKeyPair
        SecurityGroups:
          - !Ref LaunchTempalteSg

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !ImportValue mainvpc

  AutoScallingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !ImportValue subnetA
        - !ImportValue subnetB
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      TargetGroupARNs:
        - !Ref TargetGroup
      MaxSize: "1"
      MinSize: "1"
      DesiredCapacity: "1"
